application:
  host: http://localhost

spring:
  application:
    name: Metal Detector
  lifecycle:
    timeout-per-shutdown-phase: 60s
  task:
    scheduling:
      shutdown:
        await-termination: true
        await-termination-period: PT1M
    execution:
      shutdown:
        await-termination: true
        await-termination-period: PT1M
  datasource:
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE_URL}
    driver-class-name: org.postgresql.Driver
    hikari:
      max-lifetime: 600000
      connection-test-query: SELECT 1
  sql:
    init:
      platform: postgres
      mode: always
  flyway:
    baseline-on-migrate: true
    sql-migration-prefix: v
  jpa:
    properties:
      hibernate:
        # The SQL dialect makes Hibernate generate better SQL for the chosen database
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate # (create, create-drop, validate, update)
    open-in-view: false
  cache:
    jcache:
      config: classpath:config/cache/ehcache.xml
  mail:
    host: localhost
    port: 1025
    username: ${#{null}}
    password: ${#{null}}
    default-encoding: UTF-8
    protocol: smtp
    test-connection: false
    properties:
      from: notifications@metal-detector.rocks
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  thymeleaf:
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    cache: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
          spotify-app:
            client-id: ${SPOTIFY_CLIENT_ID}
            client-secret: ${SPOTIFY_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            provider: spotify-app
          spotify-user:
            client-id: ${SPOTIFY_CLIENT_ID}
            client-secret: ${SPOTIFY_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/settings/spotify-synchronization"
            scope: user-library-read, user-follow-read
            provider: spotify-user
          metal-release-butler-user:
            client-id: ${BUTLER_USER_CLIENT_ID}
            client-secret: ${BUTLER_USER_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: releases-read
            provider: metal-detector-auth
          metal-release-butler-admin:
            client-id: ${BUTLER_ADMIN_CLIENT_ID}
            client-secret: ${BUTLER_ADMIN_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: releases-read, releases-write, releases-read-all, import
            provider: metal-detector-auth
        provider:
          spotify-app:
            token-uri: https://accounts.spotify.com/api/token
          spotify-user:
            token-uri: https://accounts.spotify.com/api/token
            authorization-uri: https://accounts.spotify.com/authorize
          metal-detector-auth:
            issuer-uri: http://auth-app:9000

security:
  token-issuer: ${JWT_ISSUER}
  token-secret: ${JWT_SECRET}
  remember-me-secret: ${REMEMBER_ME_SECRET}

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: never
    include-exception: false
  tomcat:
    accesslog:
      enabled: true
  shutdown: graceful

logging:
  config: classpath:config/logging/logback-local.xml
  pattern:
    level: '%5p [${spring.application.name:}]'

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, info, metrics, prometheus, flyway

discogs:
  access-token: ${DISCOGS_ACCESS_TOKEN}
  rest-base-url: https://api.discogs.com
  user-agent: MetalDetector/0.1 +https://metal-detector.rocks

spotify:
  rest-base-url: https://api.spotify.com

metal-release-butler:
  host: http://localhost:8095
  releases-url: ${metal-release-butler.host}/rest/v1/releases
  unpaginated-releases-url: ${metal-release-butler.host}/rest/v1/releases/unpaginated
  import-url: ${metal-release-butler.host}/rest/v1/releases/import
  retry-cover-download-url: ${metal-release-butler.host}/rest/v1/releases/cover-reload

log-csp-report: false

telegram:
  rest-base-url: https://api.telegram.org
  bot-id: ${TELEGRAM_BOT_ID}
